/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;
import Controlador.CategoriaControlador;
import Modelo.Categoria;
import java.util.List;
import javax.swing.table.DefaultTableModel;


import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author kreiv
 */
public class VistaCategorias extends javax.swing.JPanel {
    private final CategoriaControlador categoriaControlador;
    private Integer idCategoriaSeleccionada = null;
    /**
     * Creates new form VistaCategorias
     */
    public VistaCategorias() {
       initComponents();
       this.categoriaControlador = new CategoriaControlador();
       cargarDatosTabla();
    }
    
    private void cargarDatosTabla(){
        List<Categoria> categorias =categoriaControlador.obtenerTodasCategorias();
        
        if (categorias != null){
            
            DefaultTableModel model = (DefaultTableModel) TablaCategorias.getModel();
            
            model.setRowCount(0);
            
            for (Categoria cat : categorias){
                Object[] row = {
                   cat.getIdCategoria(),
                    cat.getNombreCategoria(),
                    cat.getDescripcionCategoria()
                };
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TextNombreCategoria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextDescripcionCategoria = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jTextBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaCategorias = new javax.swing.JTable();
        ButtonGenerarReporte = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setText("Nombre Categoria");
        add(jLabel1);
        jLabel1.setBounds(15, 29, 110, 16);

        TextNombreCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNombreCategoriaActionPerformed(evt);
            }
        });
        add(TextNombreCategoria);
        TextNombreCategoria.setBounds(15, 51, 160, 22);

        jLabel2.setText("Descripcion Categoria");
        add(jLabel2);
        jLabel2.setBounds(199, 29, 116, 16);
        add(TextDescripcionCategoria);
        TextDescripcionCategoria.setBounds(199, 51, 160, 22);

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGuardar(evt);
            }
        });
        add(jButtonGuardar);
        jButtonGuardar.setBounds(390, 50, 120, 23);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        add(btnBuscar);
        btnBuscar.setBounds(390, 150, 120, 23);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonEliminar(evt);
            }
        });
        add(btnEliminar);
        btnEliminar.setBounds(660, 150, 116, 23);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonActualzar(evt);
            }
        });
        add(btnActualizar);
        btnActualizar.setBounds(530, 150, 116, 23);
        add(jTextBuscar);
        jTextBuscar.setBounds(16, 148, 340, 22);

        TablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Categoria", "Nombre", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaCategorias.setPreferredSize(new java.awt.Dimension(300, 230));
        TablaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaCategorias);
        TablaCategorias.getAccessibleContext().setAccessibleName("");

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 190, 760, 180);

        ButtonGenerarReporte.setText("Generar Reporte");
        ButtonGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbotonGenerarReporte(evt);
            }
        });
        add(ButtonGenerarReporte);
        ButtonGenerarReporte.setBounds(625, 50, 130, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void TextNombreCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNombreCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNombreCategoriaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void accionBotonGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGuardar
        // TODO add your handling code here:
        String nombre = TextNombreCategoria.getText();
        String descripcion = TextDescripcionCategoria.getText();
        
        if (!nombre.isEmpty()&& !descripcion.isEmpty()){
           categoriaControlador.crearCategoria(nombre, descripcion);
            cargarDatosTabla();
            TextNombreCategoria.setText("");
            TextDescripcionCategoria.setText("");
        }else{
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonGuardar

    private void accionBotonEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonEliminar
        // TODO add your handling code here:
        int filaSeleccionada = TablaCategorias.getSelectedRow();
        if (filaSeleccionada != -1 ){
            int idCategoria = (int) TablaCategorias.getValueAt(filaSeleccionada, 0);
            categoriaControlador.eliminarCategoria(idCategoria);
            cargarDatosTabla();
        }else{
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonEliminar

    private void tablaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriaMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()== 2){
            int filaSeleccionada = TablaCategorias.getSelectedRow();
            if (filaSeleccionada !=-1){
                idCategoriaSeleccionada = (int) TablaCategorias.getValueAt(filaSeleccionada, 0);
                String nombre = (String) TablaCategorias.getValueAt(filaSeleccionada, 1);
                String descripcion = (String) TablaCategorias.getValueAt(filaSeleccionada, 2);
                
                TextNombreCategoria.setText(nombre);
                TextDescripcionCategoria.setText(descripcion);
                
                btnEliminar.setEnabled(false);
                jButtonGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaCategoriaMouseClicked

    private void accionBotonActualzar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonActualzar
        // TODO add your handling code here:
        String nombre = TextNombreCategoria.getText();
        String descripcion = TextDescripcionCategoria.getText();
         
        if(idCategoriaSeleccionada != null && !nombre.isEmpty()&& !descripcion.isEmpty()){
            
            categoriaControlador.actualizarCategoria(idCategoriaSeleccionada, nombre, descripcion);
            cargarDatosTabla();
            
            TextNombreCategoria.setText("");
            TextDescripcionCategoria.setText("");
            idCategoriaSeleccionada = null;
            
            btnEliminar.setEnabled(true);
            jButtonGuardar.setEnabled(true);
        }else{
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene tods los campos.","Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonActualzar

    private void accionbotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbotonGenerarReporte
        // TODO add your handling code here:
        try{
            FileDialog dialogoArchivo = new FileDialog((java.awt.Frame)null, "Guardar Reporte PDF", FileDialog.SAVE);
        dialogoArchivo.setFile("ReporteCategorias.pdf");
        dialogoArchivo.setVisible(true);
        
        String ruta = dialogoArchivo.getDirectory();
        String nombreArchivo = dialogoArchivo.getFile();
        
        if (ruta == null || nombreArchivo == null){
            JOptionPane.showMessageDialog(this, "Operación cancelada.","Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String rutaCompleta = ruta + nombreArchivo;
        
        PdfWriter escritor = new PdfWriter(rutaCompleta);
        PdfDocument Pdf = new PdfDocument(escritor);
        Document documento = new Document(Pdf);
        
        documento.add(new Paragraph("Reporte de Categorias")
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(20)
        .setBold());
        
        documento.add(new Paragraph("Fecha:" + new java.util.Date().toString())
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(12));
        
        Table tabla = new Table(3);
        tabla.setWidth(UnitValue.createPercentValue(100));
        tabla.addHeaderCell("ID Categoria").setBold();
        tabla.addHeaderCell("Nombre").setBold();
        tabla.addHeaderCell("Descripcion").setBold();
        
        List<Categoria> listaCategorias = 
        categoriaControlador.obtenerTodasCategorias();
        if(listaCategorias != null){
            for (Categoria categoria : listaCategorias){
                tabla.addCell(String.valueOf(categoria.getIdCategoria()));
                tabla.addCell(categoria.getNombreCategoria());
                tabla.addCell(categoria.getDescripcionCategoria());
            }
        }
        documento.add(tabla);
        documento.add(new Paragraph("Notas: Reporte generado automaticamente desde el sistema.")
                .setFontSize(10)
                .setMarginTop(20));
        
        documento.close();
        
        JOptionPane.showMessageDialog(this, "Reporte PDF generado con éxito en: " + rutaCompleta,
                "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al generar el PDF: " + e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_accionbotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonGenerarReporte;
    private javax.swing.JTable TablaCategorias;
    private javax.swing.JTextField TextDescripcionCategoria;
    private javax.swing.JTextField TextNombreCategoria;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextBuscar;
    // End of variables declaration//GEN-END:variables
}
